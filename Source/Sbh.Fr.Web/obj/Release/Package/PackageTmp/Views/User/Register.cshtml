@model  Sbh.Fr.Model.Custom.Register
<style>
    .close {
        text-indent: 0;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="portlet light bordered">
        @if (ViewBag.msgSuccess != null)
            {
            <div class="alert alert-success">
                <a href="@Url.Action("Index", "Home")" class="close" type="button" data-dismiss="alert">
                    <i class="ace-icon fa fa-times"></i>
                </a>
                <strong>
                    <i class="ace-icon fa fa-check"></i>
                </strong>
                @ViewBag.msgSuccess
                <br>
            </div>
            }

        @if (ViewBag.msgError != null)
            {
            <div class="alert alert-danger">
                <a href="@Url.Action("Index", "Home")" class="close" type="button" data-dismiss="alert">
                    <i class="ace-icon fa fa-times"></i>
                </a>
                <strong>
                    <i class="ace-icon fa fa-times"></i>
                </strong>
                @ViewBag.msgError
                <br>
            </div>
            }

        <div class="portlet-title">
            @*<div class="alert alert-info text-center">
                    <h4 style="font-weight:bold; color:black">
                        Form Registration
                    </h4>
                </div>*@
            <div class="note note-info">
                <h5 style="margin-bottom: 0px;">
                    <i class="icon-user"></i>
                    Registration
                </h5>
            </div>
        </div>
        <div class="portlet-body form">
            <form role="form">
                <div class="form-body">
                    @if (Session["IdGroup"] != null)
                        {
                            if (@HttpContext.Current.Session["IdGroup"].ToString() == "1")
                            {
                        <div class="form-group form-md-line-input has-info">
                            @Html.DropDownListFor(model => model.ID_GROUP, ViewBag.IdGroup as IEnumerable<SelectListItem>, new { @class = "form-control" })
                            <label for="form_control_1">User Group</label>
                        </div>
                            }
                        }

                    <div class="form-group form-md-line-input">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        @*<input class="form-control" id="form_control_1" type="text">*@
                        <label for="form_control_1">Email</label>
                        @*<span class="help-block">Some help goes here...</span>*@
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        <label for="form_control_1">Name</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        <label for="form_control_1">Password</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        <label for="form_control_1">Confirm Password</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.EditorFor(model => model.Born, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Born, "", new { @class = "text-danger" })
                        <label for="form_control_1">Born</label>
                    </div>
                    <div class="form-group form-md-line-input has-info">
                        @Html.DropDownListFor(model => model.Gender, ViewBag.GENDER_ID as IEnumerable<SelectListItem>, new { @class = "form-control" })
                        <label for="form_control_1">Gender</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        <label for="form_control_1">Address</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.EditorFor(model => model.Job, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Job, "", new { @class = "text-danger" })
                        <label for="form_control_1">Job</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                        <label for="form_control_1">Company</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.EditorFor(model => model.Hobby, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Hobby, "", new { @class = "text-danger" })
                        <label for="form_control_1">Hobby</label>
                    </div>
                    <div class="form-group form-md-line-input">
                        @Html.TextAreaFor(model => model.OtherDescription, new { @class = "form-control", @rows = "3" })
                        @Html.ValidationMessageFor(model => model.OtherDescription, "", new { @class = "text-danger" })
                        <label for="form_control_1">Other Description</label>
                    </div>
                </div>
                @if (ViewBag.msgSuccess == null)
                    {

                    <div class="form-actions noborder">
                        <input type="submit" value="Submit" class="btn blue btn-circle-left" />
                        <a href="@Url.Action("Index", "Home")" class="btn btn-default btn-circle-right">Cancel</a>
                    </div>
                    }
                @if (ViewBag.msgSuccess != null)
                    {
                    <div class="form-actions noborder">
                        <a href="@Url.Action("Index", "Home")" class="btn btn-default btn-circle">Close</a>
                    </div>
                    }
            </form>
        </div>
    </div>

}

<script type="text/javascript">
    $(function () {
        $("#Born").datepicker();
    });
</script>